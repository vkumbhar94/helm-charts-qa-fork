=========================================================================================================
db       .d88b.   d888b  d888888b  .o88b. .88b  d88.  .d88b.  d8b   db d888888b d888888b  .d88b.  d8888b.
88      .8P  Y8. 88' Y8b   `88'   d8P  Y8 88'YbdP`88 .8P  Y8. 888o  88   `88'   `~~88~~' .8P  Y8. 88  `8D
88      88    88 88         88    8P      88  88  88 88    88 88V8o 88    88       88    88    88 88oobY'
88      88    88 88  ooo    88    8b      88  88  88 88    88 88 V8o88    88       88    88    88 88`8b
88booo. `8b  d8' 88. ~8~   .88.   Y8b  d8 88  88  88 `8b  d8' 88  V888   .88.      88    `8b  d8' 88 `88.
Y88888P  `Y88P'   Y888P  Y888888P  `Y88P' YP  YP  YP  `Y88P'  VP   V8P Y888888P    YP     `Y88P'  88   YD

      ____            _        _                   __  __             _ _             _
     / ___|___  _ __ | |_ __ _(_)_ __   ___ _ __  |  \/  | ___  _ __ (_) |_ ___  _ __(_)_ __   __ _
    | |   / _ \| '_ \| __/ _` | | '_ \ / _ \ '__| | |\/| |/ _ \| '_ \| | __/ _ \| '__| | '_ \ / _` |
    | |__| (_) | | | | || (_| | | | | |  __/ |    | |  | | (_) | | | | | || (_) | |  | | | | | (_| |
     \____\___/|_| |_|\__\__,_|_|_| |_|\___|_|    |_|  |_|\___/|_| |_|_|\__\___/|_|  |_|_| |_|\__, |
                                                                                              |___/
=========================================================================================================

Selectors to list/select kubernetes resources:

    $ export LMC_INSTANCE_SELECTOR="app.kubernetes.io/instance={{ .Release.Name }}"
    {{- if .Values.argus.enabled }}
    $ export ARGUS_SELECTOR="app.kubernetes.io/name=argus,app.kubernetes.io/instance={{ .Release.Name }}"
    {{- end -}}
    {{- if index .Values "collectorset-controller" "enabled" }}
    $ export CSC_SELECTOR="app.kubernetes.io/name=collectorset-controller,app.kubernetes.io/instance={{ .Release.Name }}"
    {{- end }}
    $ export COLLECTOR_SELECTOR="app.kubernetes.io/name=collectorset,app.kubernetes.io/instance={{ .Release.Name }}-argus"

Add above export commands in ~/.zshrc or ~/.bashrc to autoload.

Replace Selector variable in following commands as per required selection:
List Pods:
    $ kubectl get pods -l $ARGUS_SELECTOR

Get Logs:
    $ kubectl logs -l $ARGUS_SELECTOR
> Add -f option to follow logs

Get Configurations:
    $ kubectl get configmaps -l $ARGUS_SELECTOR,argus.logicmonitor.com/cache!=true
    $ kubectl get configmaps -l $CSC_SELECTOR

Use `kubectl rollout` command to restart pods:

Argus and Collectorset Controller Pods:

    $ kubectl rollout restart deployment -l $ARGUS_SELECTOR
    $ kubectl rollout restart deployment -l $CSC_SELECTOR

Collector Pods:
    $ kubectl rollout restart statefulset -l $COLLECTOR_SELECTOR

=================================
You can run `helm get notes {{.Release.Name}}` to print notes again.

Argus maintains lightweight cache entries of Logicmonitor Resources using configmaps to avoid excessive calls to Logicmonitor.
To avoid or remove any inconsistent entries from cache, Argus periodically rebuilds cache by fetching resources from Logicmonitor.
If you want to gracefully rebuild cache then set "resync.cache" to "true" on "Kubernetes Cluster: {{ .Values.argus.clusterName }}"

To gracefully trigger rebuild cache using kubectl, you need to scale down argus to zero and delete configmaps followed by scaling up argus back again:

    $ kubectl scale deployment --replicas=0 {{.Release.Name}}-argus
    $ kubectl delete configmaps -l $ARGUS_SELECTOR,argus.logicmonitor.com/cache==true
    $ kubectl scale deployment --replicas=1 {{.Release.Name}}-argus
